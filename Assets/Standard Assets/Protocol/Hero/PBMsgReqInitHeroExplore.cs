//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: PBMsgReqInitHeroExplore.proto
namespace PBMsgReqInitHeroExplore
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"PBMsgReqInitHeroExplore")]
  public partial class PBMsgReqInitHeroExplore : global::ProtoBuf.IExtensible
  {
    public PBMsgReqInitHeroExplore() {}
    
    private long _cid;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"cid", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public long cid
    {
      get { return _cid; }
      set { _cid = value; }
    }
    private long _hid;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"hid", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public long hid
    {
      get { return _hid; }
      set { _hid = value; }
    }
    private int? _speed;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"speed", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int speed
    {
      get { return _speed?? default(int); }
      set { _speed = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool speedSpecified
    {
      get { return this._speed != null; }
      set { if (value == (this._speed== null)) this._speed = value ? this.speed : (int?)null; }
    }
    private bool ShouldSerializespeed() { return speedSpecified; }
    private void Resetspeed() { speedSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}